{
  "comments": [
    {
      "key": {
        "uuid": "bf091321_9b8daf7d",
        "filename": "src/java/com/android/internal/telephony/ModemBindingPolicyHandler.java",
        "patchSetId": 11
      },
      "lineNbr": 662,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-27T20:47:28Z",
      "side": 1,
      "message": "TODO",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_9f78f4f8",
        "filename": "src/java/com/android/internal/telephony/ModemBindingPolicyHandler.java",
        "patchSetId": 11
      },
      "lineNbr": 673,
      "author": {
        "id": 10293
      },
      "writtenOn": "2015-07-29T20:22:22Z",
      "side": 1,
      "message": "is this missing a check?  It looks like updatePreferredStackIds would also ensure that the phoneId2 stack supports the phoneId1 NW type after cross binding.\n\nI think it would be simpler to write a new version of setPreferredNetworkType.  It could take multiple phoneId/networkType pairs.  If rebinding is required, we just put the response in the map as before.  If rebinding is not required, just call mCi[phoneId].setPreferredNeworkType for each phoneId.  This way we don\u0027t have to rewrite any of the logic from updatePreferredStackIds.",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_1f03c444",
        "filename": "src/java/com/android/internal/telephony/ModemBindingPolicyHandler.java",
        "patchSetId": 11
      },
      "lineNbr": 673,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-29T21:27:33Z",
      "side": 1,
      "message": "I intentionally left that out as we have the phoneId2 networkTyp2 hardcoded to 2G in SubscriptionController, which we assume is supported by both stacks. Otherwise this wouldn\u0027t be useful.\n\nI do like that idea of a generic method though, I had thought of that initially. It could be used elsewhere too if needed. Will switch to that.",
      "parentUuid": "bf091321_9f78f4f8",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_c2fe93ad",
        "filename": "src/java/com/android/internal/telephony/ModemBindingPolicyHandler.java",
        "patchSetId": 11
      },
      "lineNbr": 673,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-30T02:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf091321_1f03c444",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_db9327a3",
        "filename": "src/java/com/android/internal/telephony/ModemBindingPolicyHandler.java",
        "patchSetId": 11
      },
      "lineNbr": 689,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-27T20:47:28Z",
      "side": 1,
      "message": "This.",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_bb907397",
        "filename": "src/java/com/android/internal/telephony/ModemBindingPolicyHandler.java",
        "patchSetId": 11
      },
      "lineNbr": 692,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-27T20:47:28Z",
      "side": 1,
      "message": "This.",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_3eaa1185",
        "filename": "src/java/com/android/internal/telephony/SubscriptionController.java",
        "patchSetId": 11
      },
      "lineNbr": 1449,
      "author": {
        "id": 9813
      },
      "writtenOn": "2015-07-28T01:43:00Z",
      "side": 1,
      "message": "Should we really throw a runtimeexception here? in what scenario does this happen?\n\nCommenting mostly because its unusual to break anything based off of bad data from telephony.",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_2cf78bf8",
        "filename": "src/java/com/android/internal/telephony/SubscriptionController.java",
        "patchSetId": 11
      },
      "lineNbr": 1449,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-28T17:00:55Z",
      "side": 1,
      "message": "It shouldn\u0027t, actually. I copied it from the above method.\n\nIn any case, a runtimeexception might be too much, it\u0027ll switch to a log print rather.",
      "parentUuid": "bf091321_3eaa1185",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_02f5abcb",
        "filename": "src/java/com/android/internal/telephony/SubscriptionController.java",
        "patchSetId": 11
      },
      "lineNbr": 1449,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-30T02:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf091321_2cf78bf8",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_7be89b15",
        "filename": "src/java/com/android/internal/telephony/SubscriptionController.java",
        "patchSetId": 11
      },
      "lineNbr": 1463,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-27T20:47:28Z",
      "side": 1,
      "message": "Any suggestions here?",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_fe93795b",
        "filename": "src/java/com/android/internal/telephony/SubscriptionController.java",
        "patchSetId": 11
      },
      "lineNbr": 1463,
      "author": {
        "id": 9813
      },
      "writtenOn": "2015-07-28T01:43:00Z",
      "side": 1,
      "message": "Maybe move this logic to ModemBindingPolicyHandler? Then you can just pass the subId, check for the invalid indexes and invalid subscription id\u0027s.",
      "parentUuid": "bf091321_7be89b15",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf091321_ecd87380",
        "filename": "src/java/com/android/internal/telephony/SubscriptionController.java",
        "patchSetId": 11
      },
      "lineNbr": 1463,
      "author": {
        "id": 2195
      },
      "writtenOn": "2015-07-28T17:00:55Z",
      "side": 1,
      "message": "I didn\u0027t want to add any non modem specific code to that, and this class already has the necessary imports and initialisations.",
      "parentUuid": "bf091321_fe93795b",
      "revId": "a04961f82e7f4270365a45788307dafda61a9d37",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}